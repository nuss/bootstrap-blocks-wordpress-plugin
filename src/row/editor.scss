@import "../assets/gutenberg/gutenberg";

@mixin make-grid-columns($current-size-index: 1, $sizes: ('xl', 'lg', 'md', 'sm', 'xs'), $grid-columns: 12) {
	@if $current-size-index <= length($sizes) {
		$size: nth($sizes, $current-size-index);

		@for $i from 1 through $grid-columns {
			&[data-size-#{$size}="#{$i}"] {
				width: percentage(($i / $grid-columns));
			}
		}
		&[data-size-#{$size}="0"] {
			@include make-grid-columns($current-size-index + 1);
		}
	} @else {
		flex-grow: 1;
	}
}

[data-type="wp-bootstrap-blocks/row"] {
	// Horizontal alignment
	&[data-alignment="center"] .wp-block-wp-bootstrap-blocks-row > .editor-inner-blocks > .editor-block-list__layout {
		justify-content: center;
	}
	&[data-alignment="right"] .wp-block-wp-bootstrap-blocks-row > .editor-inner-blocks > .editor-block-list__layout {
		justify-content: flex-end;
	}

	// Vertical alignment
	&[data-vertical-alignment="center"] .wp-block-wp-bootstrap-blocks-row > .editor-inner-blocks > .editor-block-list__layout {
		align-items: center;
	}
	&[data-vertical-alignment="bottom"] .wp-block-wp-bootstrap-blocks-row > .editor-inner-blocks > .editor-block-list__layout {
		align-items: flex-end;
	}

	// Row background
	> .editor-block-list__block-edit::before {
		background-color: #e9ecef; // bootstrap $gray-200
	}

	// Selected row background
	&.editor-block-list__block.is-selected > .editor-block-list__block-edit::before {
		background-color: #dee2e6; // bootstrap $gray-300
	}

	/*
     * If there is a block within a full-width block (align full),
     * their toolbar must be offset by 14 px
     * due to the negative margins on .editor-block-list__layout
     */
	&[data-align="full"] {
		.wp-block {
			.editor-block-toolbar {
				left: $block-padding;
			}
		}
	}
}

.wp-block-wp-bootstrap-blocks-row {
	@include break-small() {
		> .editor-inner-blocks > .editor-block-list__layout {
			display: flex;
			flex-wrap: wrap;

			> [data-type="wp-bootstrap-blocks/column"] {
				margin-left: 0;
				margin-right: 0;

				// Grid implementation
				@include make-grid-columns();

				// Prevent long unbroken words from overflowing.
				word-break: break-word; // For back-compat.
				overflow-wrap: break-word; // New standard.
			}

			// Set block list appender width to use full width of container to wrap to new line
			> .block-list-appender {
				width: 100%;
			}
		}
	}
}
